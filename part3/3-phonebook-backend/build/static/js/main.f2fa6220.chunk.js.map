{"version":3,"sources":["components/Person.js","components/Persons.js","services/persons.js","components/Notification.js","components/PersonForm.js","components/Phonebook.js","App.js","index.js"],"names":["Person","person","handleDeleteButton","align","name","id","number","onClick","Persons","persons","map","baseUrl","axios","get","then","respond","data","newPerson","post","response","put","delete","Notification","message","notificationClass","className","PersonForm","setPersons","useState","newName","setNewName","newNumber","setNewNumber","addPersonMessage","setAddPersonMessage","setNotificationClass","onSubmit","event","preventDefault","some","existingPerson","filter","p","window","confirm","personObject","personsService","returnedPerson","catch","setTimeout","concat","value","onChange","target","type","PhoneBook","setFilter","useEffect","returnedData","personToShow","length","includes","App","initialPersons","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f2fa6220.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Person = ({person,handleDeleteButton}) => {\r\n\r\n    return (\r\n        <thead>\r\n            <tr>\r\n                <th align='left' key={person.id}>{person.name}</th>\r\n                <th align='left' key={person.number}>{person.number}</th>\r\n                <th><button onClick={()=>handleDeleteButton(person)}>delete</button></th>\r\n            </tr>\r\n        </thead>\r\n    )\r\n}\r\n\r\nexport default Person","import React from \"react\";\r\nimport Person from \"./Person\";\r\n\r\nconst Persons = ({persons,handleDeleteButton}) => {\r\n    return (\r\n        <div>\r\n            <h2>Numbers</h2>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th align='left'>Name</th>\r\n                        <th align='left'>Number</th>\r\n                    </tr>\r\n                </thead>\r\n                {persons.map( person => <Person key={person.name} person={person} handleDeleteButton={handleDeleteButton}/>)}\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Persons","import axios from \"axios\";\r\n\r\nconst baseUrl = \"/api/persons\"\r\n\r\nconst getAll = () => {\r\n    const respond = axios.get(baseUrl)\r\n    return respond.then( respond => respond.data)\r\n}\r\n\r\nconst create = (newPerson) => {\r\n    const response = axios.post(baseUrl,newPerson)\r\n    return response.then(response => response.data)\r\n}\r\n\r\nconst update = (id,newPerson) => {\r\n    const response = axios.put(`${baseUrl}/${id}`,newPerson)\r\n    return response.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n    const response = axios.delete(`${baseUrl}/${id}`)\r\n    return response.then(response => response.data)\r\n}\r\n\r\nexport default {getAll, create, update, remove}","import React from 'react'\r\n\r\nconst Notification = ({message, notificationClass}) => {\r\n\r\n    if(message===null){\r\n        return null\r\n    }\r\n\r\n    return(\r\n        <div className={notificationClass}>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React, {useState} from \"react\";\r\nimport personsService from '../services/persons'\r\nimport Notification from \"./Notification\";\r\n\r\nconst PersonForm = ({persons, setPersons}) => {\r\n\r\n    const [newName, setNewName] = useState('')\r\n    const [newNumber, setNewNumber] = useState('')\r\n    const [addPersonMessage, setAddPersonMessage] = useState(null)\r\n    const [notificationClass, setNotificationClass] = useState('addNewPerson')\r\n\r\n    const handleOnChangeNewName = (event) => {\r\n        setNewName(event.target.value)\r\n    }\r\n    const handleOnChangeNewNumber = (event) => {\r\n        setNewNumber(event.target.value)\r\n    }\r\n\r\n    const addNewPerson = (event) => {\r\n        event.preventDefault()\r\n        if (persons.some( (person) => person.name === newName)){\r\n            const existingPerson = persons.filter( p => p.name === newName)[0]\r\n            if(window.confirm(`${existingPerson.name} is already added to the phonebook, replace the old number with a new one?`)){\r\n                const personObject = {\r\n                    name: existingPerson.name, number: newNumber\r\n                }\r\n                personsService\r\n                    .update(existingPerson.id,personObject)\r\n                    .then( returnedPerson => {\r\n                        setPersons(persons.map( person => person.id === returnedPerson.id ? returnedPerson : person))\r\n                        setNewName('')\r\n                        setNewNumber('')\r\n                    })\r\n                    .catch(returnedPerson => {\r\n                        setNotificationClass('error')\r\n                        setAddPersonMessage(`Information of ${existingPerson.name} has already been removed from server`)\r\n                        setTimeout(()=>setAddPersonMessage(null),5000)\r\n                    })\r\n            }\r\n        } else{\r\n            const personObject = {\r\n                name: newName, number: newNumber\r\n            }\r\n\r\n            personsService\r\n                .create(personObject)\r\n                .then( returnedPerson => {\r\n                    setPersons(persons.concat(returnedPerson))\r\n                    setNewName('')\r\n                    setNewNumber('')\r\n                    setNotificationClass('addNewPerson')\r\n                    setAddPersonMessage(`Added ${returnedPerson.name}`)\r\n                    setTimeout(()=>setAddPersonMessage(null),5000)\r\n                })\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <Notification message={addPersonMessage} notificationClass={notificationClass}/>\r\n            <form onSubmit={addNewPerson}>\r\n                <div>\r\n                    Name: <input\r\n                    value={newName}\r\n                    onChange={handleOnChangeNewName}\r\n                />\r\n                </div>\r\n                <div>\r\n                    Number: <input\r\n                    value={newNumber}\r\n                    onChange={handleOnChangeNewNumber}\r\n                />\r\n                </div>\r\n                <div>\r\n                    <button type=\"submit\" >add</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PersonForm","import React, {useState, useEffect} from \"react\";\r\nimport axios from \"axios\";\r\nimport Persons from \"./Persons\";\r\nimport PersonForm from \"./PersonForm\";\r\nimport personsService from \"../services/persons\";\r\n\r\nconst PhoneBook = () => {\r\n\r\n    const [persons, setPersons] = useState([])\r\n    const [filter, setFilter] = useState('')\r\n\r\n    useEffect(() => {\r\n        personsService\r\n            .getAll()\r\n            .then( returnedData => {\r\n                setPersons(returnedData)\r\n            })\r\n    },[])\r\n\r\n    const handleDeleteButton = (person) => {\r\n        if(window.confirm(`Delete ${person.name} ?`)){\r\n            personsService\r\n                .remove(person.id)\r\n                .then(() => {\r\n                    setPersons(persons.filter( p => p.id !== person.id))\r\n                })\r\n        }\r\n    }\r\n\r\n    const handleOnChangeFilter = (event) => setFilter(event.target.value)\r\n    const personToShow = filter.length>0\r\n        ? persons.filter(person => person.name.includes(filter))\r\n        : persons\r\n\r\n    return (\r\n        <div>\r\n            <h2>Phonebook</h2>\r\n            <div>\r\n                filter shown with <input value={filter} onChange={handleOnChangeFilter}/>\r\n            </div>\r\n            <h3>Add a new person</h3>\r\n            <PersonForm persons={persons} setPersons={setPersons}/>\r\n            <Persons persons={personToShow} handleDeleteButton={handleDeleteButton}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PhoneBook","import React from \"react\";\r\nimport PhoneBook from \"./components/Phonebook\";\r\n\r\nconst App = ({initialPersons}) => {\r\n\r\n    return (\r\n        <>\r\n            <PhoneBook initialPersons={initialPersons}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from \"./App\";\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n"],"sourceRoot":""}