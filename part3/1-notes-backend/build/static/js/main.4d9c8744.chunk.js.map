{"version":3,"sources":["components/Note.js","services/notes.js","components/Notification.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","baseUrl","request","axios","get","nonExisting","id","date","then","response","data","concat","newObject","post","put","Notification","message","Footer","style","color","fontStyle","fontSize","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","map","find","updatedNote","returnedNote","catch","error","setTimeout","n","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","Date","toISOString","Math","random","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"sLAceA,EAZF,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,iBACXC,EAAQF,EAAKG,UACjB,qBAAuB,iBAEzB,OACI,qBAAIC,UAAU,OAAd,UACKJ,EAAKK,QACN,wBAAQC,QAASL,EAAjB,SAAoCC,Q,gBCP1CK,EAAU,aAuBD,EArBA,WACX,IAAMC,EAAUC,IAAMC,IAAIH,GACpBI,EAAc,CAChBC,GAAI,IACJP,QAAS,mCACTQ,KAAM,2BACNV,WAAW,GAEf,OAAOK,EAAQM,MAAM,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,OAAON,OAa3C,EAVA,SAAAO,GAEX,OADgBT,IAAMU,KAAKZ,EAASW,GACrBJ,MAAM,SAAAC,GAAQ,OAAIA,EAASC,SAQ/B,EALA,SAACJ,EAAGM,GAEf,OADgBT,IAAMW,IAAN,UAAab,EAAb,YAAwBK,GAAKM,GAC9BJ,MAAM,SAAAC,GAAQ,OAAIA,EAASC,SCR/BK,EAZM,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACnB,OAAc,OAAVA,EACO,KAIP,qBAAKlB,UAAU,QAAf,SACKkB,KCJPC,EAAS,WAMX,OACI,sBAAKC,MANW,CAChBC,MAAO,QACPC,UAAW,SACXC,SAAU,IAGV,UACI,uBACA,yIAkFGC,EA7EH,WAAO,IAAD,EACYC,mBAAS,IADrB,mBACPC,EADO,KACAC,EADA,OAEgBF,mBAAS,iBAFzB,mBAEPG,EAFO,KAEEC,EAFF,OAGgBJ,oBAAS,GAHzB,mBAGPK,EAHO,KAGEC,EAHF,OAI0BN,mBAAS,0BAJnC,mBAIPO,EAJO,KAIOC,EAJP,KAMdC,qBAAU,WACNC,IAEKzB,MAAM,SAAA0B,GACHT,EAASS,QAElB,IAEH,IAqCMC,EAAcP,EAAUJ,EAAQA,EAAMY,QAAO,SAAA1C,GAAI,OAAIA,EAAKG,aAEhE,OACI,gCACI,uCACA,cAAC,EAAD,CAAcmB,QAASc,IACvB,yBAAQ9B,QAAS,kBAAI6B,GAAYD,IAAjC,kBACUA,EAAU,YAAc,SAElC,6BACKO,EAAYE,KAAI,SAAA3C,GAAI,OACjB,cAAC,EAAD,CAAoBA,KAAMA,EAAMC,iBAAkB,kBA7BvC,SAACW,GACxB,IAAMZ,EAAO8B,EAAMc,MAAM,SAAA5C,GAAI,OAAIA,EAAKY,KAAOA,KACvCiC,EAAW,2BAAO7C,GAAP,IAAaG,WAAYH,EAAKG,YAE/CoC,EACY3B,EAAGiC,GACV/B,MAAM,SAAAgC,GACHf,EAASD,EAAMa,KAAK,SAAA3C,GAAI,OAAIA,EAAKY,KAAKA,EAAKZ,EAAO8C,SAErDC,OAAM,SAAAC,GACHX,EAAgB,SAAD,OAAUrC,EAAKK,QAAf,sCACf4C,YAAW,WACPZ,EAAgB,QAClB,KACFN,EAASD,EAAMY,QAAO,SAAAQ,GAAC,OAAIA,EAAEtC,KAAOA,SAesBuC,CAAmBnD,EAAKY,MAAnEZ,EAAKY,SAGxB,uBAAMwC,SAnDE,SAACC,GACbA,EAAMC,iBACN,IAAMC,EAAa,CACflD,QAAS2B,EACTnB,MAAM,IAAI2C,MAAOC,cACjBtD,UAAWuD,KAAKC,SAAS,IAE7BpB,EACYgB,GACPzC,MAAK,SAAAgC,GACFf,EAASD,EAAMb,OAAO6B,IACtBb,EAAW,QAwCf,UACI,uBACI2B,MAAO5B,EACP6B,SAvCO,SAACR,GACpBpB,EAAWoB,EAAMS,OAAOF,UAwChB,wBAAQG,KAAK,SAAb,qBAEJ,cAAC,EAAD,Q,MCtFZC,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.4d9c8744.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({note, toggleImportance}) => {\r\n    const label = note.important\r\n    ? 'make not important' : 'make important'\r\n\r\n    return (\r\n        <li className='note'>\r\n            {note.content}\r\n            <button onClick={toggleImportance}>{label}</button>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Note","import axios from \"axios\";\r\n\r\nconst baseUrl = '/api/notes'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    const nonExisting = {\r\n        id: 10000,\r\n        content: 'This note is not saved to server',\r\n        date: '2019-05-30T17:30:31.098Z',\r\n        important: true,\r\n    }\r\n    return request.then( response => response.data.concat(nonExisting))\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then( response => response.data)\r\n}\r\n\r\nconst update = (id,newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`,newObject)\r\n    return request.then( response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update}","import React from 'react'\r\n\r\nconst Notification = ({message}) => {\r\n    if (message===null){\r\n        return null\r\n    }\r\n\r\n    return(\r\n        <div className='error'>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React, {useState, useEffect} from 'react'\r\nimport Note from \"./components/Note\";\r\nimport noteService from './services/notes'\r\nimport Notification from \"./components/Notification\";\r\n\r\nconst Footer = () => {\r\n    const footerStyle = {\r\n        color: 'green',\r\n        fontStyle: 'italic',\r\n        fontSize: 16\r\n    }\r\n    return (\r\n        <div style={footerStyle}>\r\n            <br />\r\n            <em>Note app, Mateo is learning React thanks to: Department of Computer Science, University of Helsinki</em>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst App = () => {\r\n    const [notes, setNotes] = useState([])\r\n    const [newNote, setNewNote] = useState('a new note...')\r\n    const [showAll, setShowAll] = useState(true)\r\n    const [errorMessage, setErrorMessage] = useState('some error happened...')\r\n\r\n    useEffect(()=>{\r\n        noteService\r\n            .getAll()\r\n            .then( initialNotes => {\r\n                setNotes(initialNotes)\r\n            })\r\n    }, [])\r\n\r\n    const addNote = (event) => {\r\n        event.preventDefault()\r\n        const noteObject = {\r\n            content: newNote,\r\n            date: new Date().toISOString(),\r\n            important: Math.random()<0.5\r\n        }\r\n        noteService\r\n            .create(noteObject)\r\n            .then(returnedNote => {\r\n                setNotes(notes.concat(returnedNote))\r\n                setNewNote('')\r\n            })\r\n    }\r\n\r\n    const handleOnChange = (event) => {\r\n        setNewNote(event.target.value)\r\n    }\r\n\r\n    const toggleImportanceOf = (id) => {\r\n        const note = notes.find( note => note.id === id)\r\n        const updatedNote = {...note, important: !note.important}\r\n\r\n        noteService\r\n            .update(id,updatedNote)\r\n            .then( returnedNote => {\r\n                setNotes(notes.map( note => note.id!==id ? note : returnedNote))\r\n            })\r\n            .catch(error => {\r\n                setErrorMessage(`Note '${note.content}' was already removed from server`)\r\n                setTimeout(()=>{\r\n                    setErrorMessage(null)\r\n                },5000)\r\n                setNotes(notes.filter(n => n.id !== id))\r\n            })\r\n    }\r\n\r\n    const notesToShow = showAll ? notes : notes.filter(note => note.important)\r\n\r\n    return (\r\n        <div>\r\n            <h1>Notes</h1>\r\n            <Notification message={errorMessage}/>\r\n            <button onClick={()=>setShowAll(!showAll)}>\r\n                show {showAll ? 'important' : 'all'}\r\n            </button>\r\n            <ul>\r\n                {notesToShow.map(note =>\r\n                    <Note key={note.id} note={note} toggleImportance={()=>toggleImportanceOf(note.id)}/>\r\n                )}\r\n            </ul>\r\n            <form onSubmit={addNote}>\r\n                <input\r\n                    value={newNote}\r\n                    onChange={handleOnChange}\r\n                />\r\n                <button type=\"submit\">save</button>\r\n            </form>\r\n            <Footer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n)"],"sourceRoot":""}